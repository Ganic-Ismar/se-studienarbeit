package com.se.studienarbeit;

import java.util.Collections;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@CrossOrigin(origins = "*")
@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private UserRepository userRepository;
  private static boolean awake = false;

  @CrossOrigin(origins = "*")
  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewUser (@RequestParam String name
      , @RequestParam String email
      , @RequestParam String password
      , @RequestParam String plz
      , @RequestParam String strasse
      , @RequestParam String ort) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    User n = new User();
    n.setName(name);
    n.setEmail(email);
    n.setPassword(password);
    n.setOrt(ort);
    n.setStrasse(strasse);
    n.setPlz(plz);
    userRepository.save(n);
    return "Saved";
  }

  @CrossOrigin(origins = "*")
  @GetMapping(path="/all")
  public @ResponseBody Iterable<User> getAllUsers() {
    // This returns a JSON or XML with the users
    return userRepository.findAll();
  }

  @CrossOrigin(origins = "*")
  @GetMapping(path="/awake")
  public @ResponseBody Set<String> sendStatus() {
    String awakeString = "Offline";
    if (awake) {
      awakeString = "Online";
    }
    return Collections.singleton(awakeString);
  }

  public static void setAwakeStatus(boolean b) {
    awake = b;
  }
}
